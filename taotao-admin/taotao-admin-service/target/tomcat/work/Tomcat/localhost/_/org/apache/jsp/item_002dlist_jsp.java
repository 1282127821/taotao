/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-03-13 04:49:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class item_002dlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t/** 定义工具栏数据 */\r\n");
      out.write("    var itemToolbar = [{\r\n");
      out.write("        text : '新增',\r\n");
      out.write("        iconCls : 'icon-add',\r\n");
      out.write("        handler : function(){\r\n");
      out.write("        \t$(\".tree-title:contains('新增商品')\").parent().click();\r\n");
      out.write("        }\r\n");
      out.write("    },{\r\n");
      out.write("        text : '编辑',\r\n");
      out.write("        iconCls : 'icon-edit',\r\n");
      out.write("        handler : function(){\r\n");
      out.write("        \t/** 获取用户选中的行 */\r\n");
      out.write("        \tvar rows = $(\"#itemList\").datagrid(\"getSelections\");\r\n");
      out.write("        \tif(rows.length == 0){\r\n");
      out.write("        \t\t$.messager.alert('提示','必须选择一个商品才能编辑!', \"warning\");\r\n");
      out.write("        \t}else if(rows.length == 1){\r\n");
      out.write("        \t\t$(\"#itemEditWindow\").window({\r\n");
      out.write("            \t\tonLoad : function(){\r\n");
      out.write("            \t\t\t/** 回显数据 */\r\n");
      out.write("            \t\t\tvar data =rows[0];\r\n");
      out.write("            \t\t\t/** 显示价格 */\r\n");
      out.write("            \t\t\tdata.priceView = TAOTAO.formatPrice(data.price);\r\n");
      out.write("            \t\t\t/** 让表单回显数据 */\r\n");
      out.write("            \t\t\t$(\"#item-edit #itemeEditForm\").form(\"load\", data);\r\n");
      out.write("            \t\t\t/** 加载商品描述 */\r\n");
      out.write("            \t\t\t$.getJSON('/itemdesc/' + data.id, function(data){\r\n");
      out.write("            \t\t\t\t/** 在富文本编辑器中显示数据 */\r\n");
      out.write("            \t\t\t\titemEditEditor.html(data.itemDesc);\r\n");
      out.write("            \t\t\t});\r\n");
      out.write("            \t\t\t/** 回显类目名称 */\r\n");
      out.write("                    \t$(\"#item-edit #cid_span\").text(data.name);\r\n");
      out.write("            \t\t\t/** 判断是否有图片数据 */\r\n");
      out.write("                    \tif(data.image){\r\n");
      out.write("                    \t\t/** 获取item-edit.jsp中<div class=\"pics\"><ul></ul></div>的ul标签 */\r\n");
      out.write("                \t\t\tvar ul = $(\"#item-edit .pics\").find(\"ul\");\r\n");
      out.write("                \t\t\t/** 清空ul中的内容 */\r\n");
      out.write("                \t\t\tul.empty();\r\n");
      out.write("                \t\t\t/** 分隔多个图片地址成数组 */\r\n");
      out.write("                    \t\tvar imgs = data.image.split(\",\");\r\n");
      out.write("                \t\t\t/** 迭代数组 */\r\n");
      out.write("                    \t\tfor(var i in imgs){\r\n");
      out.write("                    \t\t\tif($.trim(imgs[i]).length > 0){\r\n");
      out.write("                    \t\t\t\tul.append(\"<li><a href='\"+imgs[i]+\"' target='_blank'><img src='\"+imgs[i]+\"' width='80' height='50' /></a></li>\");\r\n");
      out.write("                    \t\t\t}\r\n");
      out.write("                    \t\t}\r\n");
      out.write("                    \t}\r\n");
      out.write("            \t\t\t\r\n");
      out.write("            \t\t}\r\n");
      out.write("            \t}).window(\"open\");\r\n");
      out.write("        \t}else{\r\n");
      out.write("        \t\t$.messager.alert('提示','只能选择一个商品!', \"warning\");\r\n");
      out.write("        \t}\r\n");
      out.write("        }\r\n");
      out.write("    },{\r\n");
      out.write("        text : '删除', // 删除功能\r\n");
      out.write("        iconCls : 'icon-cancel',\r\n");
      out.write("        handler : function(){\r\n");
      out.write("        \t/** 获取用户选中的行 */\r\n");
      out.write("        \tvar rows = $(\"#itemList\").datagrid(\"getSelections\");\r\n");
      out.write("        \tif(rows.length == 0){\r\n");
      out.write("        \t\t$.messager.alert('提示','请选择要删除的商品！', \"warning\");\r\n");
      out.write("        \t}else{\r\n");
      out.write("        \t\tvar ids = [];\r\n");
      out.write("        \t\t/** 迭代所有行的数据 */\r\n");
      out.write("        \t\t$.each(rows, function(){\r\n");
      out.write("        \t\t\tids.push(this.id);\r\n");
      out.write("        \t\t});\r\n");
      out.write("        \t\t$.messager.confirm('确认','亲您确定要删除吗？',function(r){\r\n");
      out.write("            \t    if (r){\r\n");
      out.write("                    \t$.post(\"/item/delete\",{\"ids\" : ids.join(\",\")}, function(){\r\n");
      out.write("               \t\t\t\t$.messager.alert('提示','删除商品成功!','info', function(){\r\n");
      out.write("               \t\t\t\t\t$(\"#itemList\").datagrid(\"reload\");\r\n");
      out.write("               \t\t\t\t});\r\n");
      out.write("                \t\t});\r\n");
      out.write("            \t    }\r\n");
      out.write("            \t});\r\n");
      out.write("        \t}\r\n");
      out.write("        }\r\n");
      out.write("    },'-',{\r\n");
      out.write("        text : '下架', // 下架功能\r\n");
      out.write("        iconCls : 'icon-remove',\r\n");
      out.write("        handler : function(){\r\n");
      out.write("        \t/** 获取用户选中的行 */\r\n");
      out.write("        \tvar rows = $(\"#itemList\").datagrid(\"getSelections\");\r\n");
      out.write("        \tif(rows.length == 0){\r\n");
      out.write("        \t\t$.messager.alert('提示','未选中商品!', 'info');\r\n");
      out.write("        \t}else{\r\n");
      out.write("        \t\tvar ids = [];\r\n");
      out.write("        \t\t/** 迭代所有行的数据 */\r\n");
      out.write("        \t\t$.each(rows, function(){\r\n");
      out.write("        \t\t\tids.push(this.id);\r\n");
      out.write("        \t\t});\r\n");
      out.write("        \t\t$.messager.confirm('确认','确定下架ID为 '+ids+' 的商品吗？',function(r){\r\n");
      out.write("            \t    if (r){\r\n");
      out.write("                    \t$.post(\"/item/instock\",{\"ids\" : ids.join(\",\")}, function(){\r\n");
      out.write("               \t\t\t\t$.messager.alert('提示','下架商品成功!','info',function(){\r\n");
      out.write("               \t\t\t\t\t$(\"#itemList\").datagrid(\"reload\");\r\n");
      out.write("               \t\t\t\t});\r\n");
      out.write("                \t\t});\r\n");
      out.write("            \t    }\r\n");
      out.write("            \t});\r\n");
      out.write("        \t}\r\n");
      out.write("        }\r\n");
      out.write("    },{\r\n");
      out.write("        text : '上架', // 上架\r\n");
      out.write("        iconCls : 'icon-remove',\r\n");
      out.write("        handler : function(){\r\n");
      out.write("        \t/** 获取用户选中的行 */\r\n");
      out.write("        \tvar rows = $(\"#itemList\").datagrid(\"getSelections\");\r\n");
      out.write("        \tif(rows.length == 0){\r\n");
      out.write("        \t\t$.messager.alert('提示','未选中商品!', 'info');\r\n");
      out.write("        \t}else{\r\n");
      out.write("        \t\tvar ids = [];\r\n");
      out.write("        \t\t/** 迭代所有行的数据 */\r\n");
      out.write("        \t\t$.each(rows, function(){\r\n");
      out.write("        \t\t\tids.push(this.id);\r\n");
      out.write("        \t\t});\r\n");
      out.write("        \t\t$.messager.confirm('确认','确定上架ID为 '+ids+' 的商品吗？',function(r){\r\n");
      out.write("            \t    if (r){\r\n");
      out.write("                    \t$.post(\"/item/reshelf\", {\"ids\" : ids.join(\",\")} , function(data){\r\n");
      out.write("               \t\t\t\t$.messager.alert('提示','上架商品成功!','info',function(){\r\n");
      out.write("               \t\t\t\t\t$(\"#itemList\").datagrid(\"reload\");\r\n");
      out.write("               \t\t\t\t});\r\n");
      out.write("                \t\t});\r\n");
      out.write("            \t    }\r\n");
      out.write("            \t});\r\n");
      out.write("        \t}\r\n");
      out.write("        }\r\n");
      out.write("    },{\r\n");
      out.write("        text : '<input type=\"text\" id=\"search\" name=\"search\">' // 搜索框\r\n");
      out.write("    }];\r\n");
      out.write("\t\r\n");
      out.write("    /** 监听文档加载完事件 */\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t/** 初始化数据表格 */\r\n");
      out.write("\t\t$(\"#itemList\").datagrid({\r\n");
      out.write("\t\t\tcollapsible : true,\r\n");
      out.write("\t\t\tpagination : true,\r\n");
      out.write("\t\t\turl : '/item',\r\n");
      out.write("\t\t\tmethod : 'get',\r\n");
      out.write("\t\t\tpageSize : 30,\r\n");
      out.write("\t\t\ttoolbar : itemToolbar\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t/** 搜索框 */\r\n");
      out.write("\t\t$(\"#search\").searchbox({ \r\n");
      out.write("\t\t\twidth : 300,\r\n");
      out.write("\t\t\tsearcher : function(value,name){ \r\n");
      out.write("\t\t\t\t$(\"#itemList\").datagrid(\"load\", {\"title\" : encodeURI(value)});\r\n");
      out.write("\t\t\t}, \r\n");
      out.write("\t\t\tprompt:'请输入商品标题'\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- 定义展示商品的数据表格 -->\r\n");
      out.write("<table id=\"itemList\" title=\"商品列表\" data-options=\"fit:true,fitColumns:true,nowrap:false\">\r\n");
      out.write("    <thead>\r\n");
      out.write("        <tr>\r\n");
      out.write("        \t<th data-options=\"field:'ck',checkbox:true\"></th>\r\n");
      out.write("        \t<th data-options=\"field:'id',width:30\">商品ID</th>\r\n");
      out.write("            <th data-options=\"field:'title',width:150,formatter:TAOTAO.formatText\">商品标题</th>\r\n");
      out.write("            <th data-options=\"field:'name',width:50\">叶子类目</th>\r\n");
      out.write("            <th data-options=\"field:'sellPoint',width:220,formatter:TAOTAO.formatText\">卖点</th>\r\n");
      out.write("            <th data-options=\"field:'price',width:70,align:'right',formatter:TAOTAO.formatPrice\">价格</th>\r\n");
      out.write("            <th data-options=\"field:'num',width:70,align:'right'\">库存数量</th>\r\n");
      out.write("            <th data-options=\"field:'barcode',width:100,formatter:TAOTAO.formatText\">条形码</th>\r\n");
      out.write("            <th data-options=\"field:'status',width:60,align:'center',formatter:TAOTAO.formatItemStatus\">状态</th>\r\n");
      out.write("            <th data-options=\"field:'created',width:130,align:'center',formatter:TAOTAO.formatDateTime\">创建日期</th>\r\n");
      out.write("            <th data-options=\"field:'updated',width:130,align:'center',formatter:TAOTAO.formatDateTime\">更新日期</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<!-- 定义div作为弹出窗口 -->\r\n");
      out.write("<div id=\"itemEditWindow\" \r\n");
      out.write("\t title=\"编辑商品\" \r\n");
      out.write("\t data-options=\"modal:true,closed:true,iconCls:'icon-save',href:'/page/item-edit'\"\r\n");
      out.write("\t style=\"width:80%;height:80%;padding:10px;\">\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
